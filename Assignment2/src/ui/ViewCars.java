/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.CarsHistory;

/**
 *
 * @author gyt
 */


public class ViewCars extends javax.swing.JPanel {

    /** Creates new form ViewCars */
    
    CarsHistory history;
    
   
    
    public ViewCars(CarsHistory history) {
        initComponents();
        this.history = history;
        populateTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        lblSerialNum = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        lblYears = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        lblSeats = new javax.swing.JLabel();
        txtSeats = new javax.swing.JTextField();
        lblManufa = new javax.swing.JLabel();
        txtManuFact = new javax.swing.JTextField();
        lblModelNum = new javax.swing.JLabel();
        txtModelNum = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblAvaliable = new javax.swing.JLabel();
        rdobtnYes = new javax.swing.JRadioButton();
        rdobtnNo = new javax.swing.JRadioButton();
        lblMainCert = new javax.swing.JLabel();
        txtMainCert = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtAvaliable = new javax.swing.JTextField();

        setInheritsPopupMenu(true);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial Number", "Year", "Seats", "Model Number", "Manufacturer", "Maintenance certificate", "City", "Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblTitle.setFont(new java.awt.Font("宋体", 0, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Cars");

        lblSerialNum.setText("Serial Number:");

        lblYears.setText("Year:");

        lblSeats.setText("Seats:");

        lblManufa.setText("Manufacturer:");

        txtManuFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManuFactActionPerformed(evt);
            }
        });

        lblModelNum.setText("Model Number:");

        lblCity.setText("City:");

        lblAvaliable.setText("Avaliable:");

        rdobtnYes.setSelected(true);
        rdobtnYes.setText("yes");

        rdobtnNo.setText("no");
        rdobtnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdobtnNoActionPerformed(evt);
            }
        });

        lblMainCert.setText("Maintenance certificate:");

        txtMainCert.setText("YYYY-MM-DD");
        txtMainCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMainCertActionPerformed(evt);
            }
        });

        btnSave.setText("Change");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSerialNum)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSeats))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAvaliable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAvaliable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdobtnYes)
                                .addGap(18, 18, 18)
                                .addComponent(rdobtnNo))
                            .addComponent(txtModelNum)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMainCert)
                        .addGap(18, 18, 18)
                        .addComponent(txtMainCert)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblYears, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblManufa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtManuFact, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtCity)))
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSerialNum)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblYears)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblManufa)
                        .addComponent(txtManuFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelNum)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdobtnYes)
                    .addComponent(lblAvaliable)
                    .addComponent(rdobtnNo)
                    .addComponent(txtAvaliable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMainCert)
                    .addComponent(txtMainCert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addContainerGap(397, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtManuFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManuFactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManuFactActionPerformed

    private void rdobtnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdobtnNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdobtnNoActionPerformed

    private void txtMainCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMainCertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMainCertActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        ArrayList<Cars> carlist = history.getHistory();
        int selectRowIndex = jTable1.getSelectedRow();
        if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to delete.");
           return;
       }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Cars car = (Cars)model.getValueAt(selectRowIndex, 0);
        history.deleteCars(car);
        String serialNum = txtSerialNum.getText();
        if(serialNum.equals(null)){
            JOptionPane.showMessageDialog(this, "The serial number cannot be null.");
            return;
        }
        for(int i = 0;i<carlist.size();i++){
            String s = carlist.get(i).getSerialNum();
            if(serialNum.equals(s)){
                JOptionPane.showMessageDialog(this, "The car already exist.");
                return;
            }
        }
        int year = Integer.parseInt(txtYear.getText());
        int seats = Integer.parseInt(txtSeats.getText());
        if(seats<=0){
            JOptionPane.showMessageDialog(this, "The number of seats must bigger than 0.");
            return;
        }

        String manufacturers = txtManuFact.getText();
        String modelNum = txtModelNum.getText();
        String city = txtCity.getText();
        boolean available;
        if(rdobtnNo.isSelected()){
            available = false;
        }else{
            available = true;
        }
        SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
        String sdate = txtMainCert.getText();
        Date date = new Date();
        try {
            date = ft.parse(sdate);
        } catch (ParseException ex) {
            Logger.getLogger(AddCarsPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Please enter the correct date format");
        }

        Cars ncar = history.addNewCar();

        ncar.setAvaliable(available);
        ncar.setCity(city);
        ncar.setMainCertificate(date);
        ncar.setManufacturer(manufacturers);
        ncar.setModelNum(modelNum);
        ncar.setSeats(seats);
        ncar.setSerialNum(serialNum);
        ncar.setYear(year);

        JOptionPane.showMessageDialog(this, "Car Changed.");

        txtCity.setText("");
        txtMainCert.setText("YYYY-MM-DD");
        txtManuFact.setText("");
        txtModelNum.setText("");
        txtSeats.setText("");
        txtSerialNum.setText("");
        txtYear.setText("");
        txtAvaliable.setText("");
        
        populateTable();
        
        

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       int selectRowIndex = jTable1.getSelectedRow();
       if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to delete.");
           return;
       }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Cars car = (Cars)model.getValueAt(selectRowIndex, 0);
        history.deleteCars(car);
        JOptionPane.showMessageDialog(this, "Car deleted.");
        populateTable();
        
        Date DeleteDate = new Date(System.currentTimeMillis());
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
       int selectRowIndex = jTable1.getSelectedRow();
       if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to delete.");
           return;
       }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Cars car = (Cars)model.getValueAt(selectRowIndex, 0);
        
        txtSerialNum.setText(car.getSerialNum());
        txtYear.setText(String.valueOf(car.getYear()));
        txtSeats.setText(String.valueOf(car.getSeats()));
        txtManuFact.setText(car.getManufacturer());
        txtModelNum.setText(car.getModelNum());
        txtCity.setText(car.getCity());
        txtAvaliable.setText(String.valueOf(car.isAvaliable()));
        SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
        Date date = car.getMainCertificate();
        txtMainCert.setText(ft.format(date));
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAvaliable;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblMainCert;
    private javax.swing.JLabel lblManufa;
    private javax.swing.JLabel lblModelNum;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerialNum;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYears;
    private javax.swing.JRadioButton rdobtnNo;
    private javax.swing.JRadioButton rdobtnYes;
    private javax.swing.JTextField txtAvaliable;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMainCert;
    private javax.swing.JTextField txtManuFact;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:history.getHistory()){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
        //To change body of generated methods, choose Tools | Templates.
    }

}
