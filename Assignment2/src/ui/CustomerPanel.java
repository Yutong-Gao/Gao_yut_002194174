/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.CarsHistory;

/**
 *
 * @author gyt
 */
public class CustomerPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPanel
     */
    CarsHistory history;
    Date update;
    
    
    public CustomerPanel(CarsHistory history,Date date) {
        initComponents();
        this.history = history;
        this.update=date;
        lblTime.setText(String.valueOf(update));
        populateTable();
        int avalibleNum = 0;
        for(Cars car:history.getHistory()){
            if(car.isAvaliable()){
                avalibleNum++;
            }
        }
        lblAvaNum.setText(String.valueOf(avalibleNum));
        lblAvaNotNum.setText(String.valueOf(history.getHistory().size()-avalibleNum));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblAvaNum = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblAvaNotNum = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtManu = new javax.swing.JTextField();
        btnManu = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtYears = new javax.swing.JTextField();
        btnYear = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtMiniSeatsNum = new javax.swing.JTextField();
        btnSeats = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtMaxSeatsNum = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        btnSerialNum = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtModelNum = new javax.swing.JTextField();
        btnModelNum = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnCity = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaManu = new javax.swing.JTextArea();
        btnShowManu = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnMC = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("There are");

        lblAvaNum.setText("00");

        jLabel3.setText("cars avaliable,");

        lblAvaNotNum.setText("00");

        jLabel5.setText("cars not avaliable.");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial Number", "Year", "Seats", "Model Number", "Manufacturer", "Maintenance certificate", "City", "Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setText("Search cars by Manufacturer:");

        btnManu.setText("search");
        btnManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManuActionPerformed(evt);
            }
        });

        jLabel7.setText("Search cars by Year:");

        btnYear.setText("search");
        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });

        jLabel8.setText("Search cars by Seats:");

        btnSeats.setText("search");
        btnSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatsActionPerformed(evt);
            }
        });

        jLabel9.setText("< the number of seats <");

        jLabel10.setText("Search cars by Serial Number:");

        btnSerialNum.setText("search");
        btnSerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumActionPerformed(evt);
            }
        });

        jLabel11.setText("Search cars by Model Number:");

        btnModelNum.setText("search");
        btnModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumActionPerformed(evt);
            }
        });

        jLabel12.setText("Search cars by City:");

        btnCity.setText("search");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        jLabel13.setText("Show all the Manufacturers:");

        txtAreaManu.setColumns(20);
        txtAreaManu.setRows(5);
        jScrollPane2.setViewportView(txtAreaManu);

        btnShowManu.setText("show");
        btnShowManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowManuActionPerformed(evt);
            }
        });

        jLabel14.setText("last update time:");

        lblTime.setText("time");

        jLabel16.setText("Show the cars that have expired maintenance certificate");

        btnMC.setText("show");
        btnMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jButton1.setText("show me the avaliable car");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblAvaNum)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblAvaNotNum)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModelNum))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtManu, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnManu))
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(txtMiniSeatsNum, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(txtYears, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnYear)))
                                .addGap(18, 18, 18)
                                .addComponent(txtMaxSeatsNum, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSeats)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSerialNum))
                            .addComponent(jLabel11))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnMC)
                                .addComponent(jLabel13)
                                .addComponent(jLabel12)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnCity))
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnShowManu))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBack)
                                    .addGap(33, 33, 33)
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblAvaNum)
                            .addComponent(jLabel3)
                            .addComponent(lblAvaNotNum)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnManu)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCity))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnYear))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMiniSeatsNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtMaxSeatsNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnShowManu)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnSeats))
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(btnMC))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSerialNum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModelNum))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack)
                            .addComponent(jLabel14)
                            .addComponent(lblTime))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManuActionPerformed
        // TODO add your handling code here:
        String manu = txtManu.getText();
        ArrayList<Cars>  manulist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getManufacturer().equals(manu)){
            manulist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:manulist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnManuActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
        String syear = txtYears.getText();
        int year = Integer.parseInt(syear);
        ArrayList<Cars>  yearlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(year==car.getYear()){
            yearlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:yearlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnYearActionPerformed

    private void btnSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatsActionPerformed
        // TODO add your handling code here:
        String smini = txtMiniSeatsNum.getText();
        int mini = Integer.parseInt(smini);
        String smax = txtMaxSeatsNum.getText();
        int max = Integer.parseInt(smax);
        if(max<mini){
        JOptionPane.showMessageDialog(this, "Please enter the correct number");
        return;
        }
        ArrayList<Cars>  seatlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getSeats()>=mini&&car.getSeats()<=max){
            seatlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:seatlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnSeatsActionPerformed

    private void btnSerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumActionPerformed
        // TODO add your handling code here:
        String sSerialNum = txtSerialNum.getText();
        ArrayList<Cars>  carlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getSerialNum().equals(sSerialNum)){
            carlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:carlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnSerialNumActionPerformed

    private void btnModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumActionPerformed
        // TODO add your handling code here:
        String sModelNum = txtModelNum.getText();
        ArrayList<Cars>  carlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getModelNum().equals(sModelNum)){
            carlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:carlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnModelNumActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        // TODO add your handling code here:
        String sCity = txtCity.getText();
        ArrayList<Cars>  carlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getCity().equals(sCity)&&car.isAvaliable()){
            carlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:carlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnCityActionPerformed

    private void btnShowManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowManuActionPerformed
        // TODO add your handling code here:
        ArrayList<String> manulist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            manulist.add(car.getManufacturer());
            }
        String manuAll = "";
        ArrayList<String> nmanu = new ArrayList<>();
        Iterator it = manulist.iterator();
        while(it.hasNext()){
            String s = (String)it.next();
            if(!nmanu.contains(s)){
                nmanu.add(s);
                manuAll=manuAll+s+",";
            }
        }
        txtAreaManu.setText(manuAll);
        
         
    }//GEN-LAST:event_btnShowManuActionPerformed

    private void btnMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCActionPerformed
        // TODO add your handling code here:
        Date ndate = new Date(System.currentTimeMillis());
        ArrayList<Cars>  carlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.getMainCertificate().before(ndate)){
            carlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:carlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_btnMCActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Cars>  carlist = new ArrayList<>();
        for(Cars car:history.getHistory()){
            if(car.isAvaliable()){
            carlist.add(car);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:carlist){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnMC;
    private javax.swing.JButton btnManu;
    private javax.swing.JButton btnModelNum;
    private javax.swing.JButton btnSeats;
    private javax.swing.JButton btnSerialNum;
    private javax.swing.JButton btnShowManu;
    private javax.swing.JButton btnYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAvaNotNum;
    private javax.swing.JLabel lblAvaNum;
    private javax.swing.JLabel lblTime;
    private javax.swing.JTextArea txtAreaManu;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManu;
    private javax.swing.JTextField txtMaxSeatsNum;
    private javax.swing.JTextField txtMiniSeatsNum;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtYears;
    // End of variables declaration//GEN-END:variables
 private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Cars car:history.getHistory()){
            
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getModelNum();
            row[4] = car.getManufacturer();
            SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
            Date date = car.getMainCertificate();
            row[5] = ft.format(date);
            row[6] = car.getCity();
            row[7] = car.isAvaliable();
            
            model.addRow(row);
            
            
        
        }
        //To change body of generated methods, choose Tools | Templates.
    }
}

