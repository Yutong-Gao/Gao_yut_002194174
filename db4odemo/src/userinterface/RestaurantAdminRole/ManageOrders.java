/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gyt
 */
public class ManageOrders extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrders
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    Restaurant restaurant;
    UserAccount userAccount;
    ArrayList<WorkRequest> orderw = new ArrayList<WorkRequest>();
    public ManageOrders(JPanel userProcessContainer,UserAccount userAccount,EcoSystem ecosystem,Restaurant restaurant) {
        initComponents();
        this.ecosystem = ecosystem;
        this.restaurant = restaurant;
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        for(WorkRequest o : ecosystem.getWorkQueue().getWorkRequestList()){
            if(o.getRestaurant().equals(restaurant)){
                orderw.add(o);
            }
        
        }
        populateOrder();
        populateDeliveryMan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnRefuse = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer name", "PhoneNumber", "items", "status", "comment"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Id"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btnAccept.setText("accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnRefuse.setText("refuse");
        btnRefuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefuseActionPerformed(evt);
            }
        });

        btnBack.setText("back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 36)); // NOI18N
        jLabel1.setText("Orders");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel2.setText("DeliveryMan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(btnAccept)
                        .addGap(54, 54, 54)
                        .addComponent(btnRefuse))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(290, 290, 290))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnRefuse))
                .addGap(82, 82, 82)
                .addComponent(btnBack)
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectRowIndex = jTable1.getSelectedRow();
        if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to accept.");
           return;
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        WorkRequest order =(WorkRequest)model.getValueAt(selectRowIndex, 2);
        
        int selectRowIndex2 = jTable2.getSelectedRow();
        if(selectRowIndex2<0){
           JOptionPane.showMessageDialog(this, "Please select a deliveryMan to accept.");
           return;
        }
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        int id =(Integer)model2.getValueAt(selectRowIndex2, 1);
        DeliveryMan deliveryMan = new DeliveryMan();
        for(DeliveryMan de :ecosystem.getDeliveryManDirectory().getDeliveryManList()){
            if(de.getId()==id){
                deliveryMan = de;
            }
        }
        
        ecosystem.getWorkQueue().acceptOrder(deliveryMan, order);
        populateOrder();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRefuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefuseActionPerformed
        // TODO add your handling code here:
        int selectRowIndex = jTable1.getSelectedRow();
        if(selectRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to refuse.");
           return;
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        WorkRequest order =(WorkRequest)model.getValueAt(selectRowIndex, 2);
        ecosystem.getWorkQueue().refuseOrder(order);
        populateOrder();
    }//GEN-LAST:event_btnRefuseActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        JPanel adminWorkAreaJPanel  = new AdminWorkAreaJPanel(userProcessContainer,restaurant.getUserAccount(),ecosystem);
        userProcessContainer.add(adminWorkAreaJPanel);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    public void populateOrder(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);     
        for(WorkRequest o:this.orderw){
           
            Object[] row = new Object[5];
            row[0] = o.getCustomer().getUsername();
            row[1] = o.getCustomer().getPhoneNum();
            row[2] = o;
            row[3] = o.getStatus();
            row[4] = o.getComments();            
            model.addRow(row);
        }
    
    }
    
    public void populateDeliveryMan(){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);     
        for(DeliveryMan deliveryMan:ecosystem.getDeliveryManDirectory().getDeliveryManList()){
           
            Object[] row = new Object[2];
            row[0] = deliveryMan;
            row[1] = deliveryMan.getId();
            model.addRow(row);
        }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefuse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
